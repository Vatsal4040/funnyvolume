<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>😂 Funny Volume Control Game</title>
  <meta name="viewport" content="width=device-width,initial-scale=1.0">
  <!-- Orbitron: Futuristic gaming font; Luckiest Guy: playful headers -->
  <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@700&family=Luckiest+Guy&display=swap" rel="stylesheet">
  <style>
    :root {
      --main-bg1: #232526;
      --main-bg2: #414345;
      --accent: #ff7643;
      --shadow: 0 6px 20px rgba(100,40,0,0.15);
      --radius: 20px;
      --font-main: 'Orbitron', sans-serif;
      --font-head: 'Luckiest Guy', cursive;
    }
    body {
      background: linear-gradient(120deg, var(--main-bg1), var(--main-bg2));
      font-family: var(--font-main);
      color: #fffdfc;
      text-align: center;
      padding: 30px 6vw 10vw 6vw;
    }
    h1 {
      font-family: var(--font-head);
      letter-spacing: 0.05em;
      font-size: 2.2rem;
      color: var(--accent);
      text-shadow: 2px 3px 18px #222,2px 4px 15px #ffb300;
      margin-bottom: 10px;
    }
    h2 {
      font-family: var(--font-head);
      color: #62fff9;
      text-shadow: 1px 2px 9px #016, 1px 3px 15px #001f3f;
      font-size: 1.2em;
      margin: 0.5em 0;
    }
    p { font-size: 1.08em; max-width: 650px; margin: 0 auto 24px; }
    .control {
      background: rgba(26,26,36,0.93);
      border-radius: var(--radius);
      box-shadow: var(--shadow);
      padding: 16px;
      margin: 24px auto;
      max-width: 430px;
      min-width: 170px;
      transition: background 0.3s;
      border: 1.2px solid #46484A;
    }
    .slider, input[type=number], input[type=text] {
      width: 95%;
      margin: 8px 0;
      background: #232526;
      border-radius: 8px;
      border: 2px solid #ffb200;
      font-family: var(--font-main);
      font-size: 1.08em;
      color: #33f8a1;
      padding: 6px 8px;
    }
    .emoji, #catEmoji { font-size: 2.2rem; margin: 5px; }
    canvas { width: 99%; max-width: 330px; height: auto; margin: 12px 0; border-radius: 10px; background: #fff; display: block; margin-left: auto; margin-right: auto; }
    button, #pumpBtn {
      background: linear-gradient(90deg, #ff7643, #ffd057 70%);
      color: #161513;
      border: none;
      border-radius: 11px;
      padding: 12px 24px;
      font-family: var(--font-main);
      font-size: 1em;
      font-weight: 700;
      letter-spacing: 0.03em;
      box-shadow: 0 3px 16px rgba(243,100,0,0.18);
      transition: background 0.19s, transform 0.09s;
      margin: 10px auto;
      display: inline-block;
      cursor: pointer;
    }
    button:hover, #pumpBtn:active { background: #ffa269; transform: scale(1.03); }
    #partyText { margin: 7px 0; font-size: 1.1em; color:#fdff74; }
    @media (max-width: 530px) {
      .control { max-width:98vw; padding:8px 2vw;}
      h1 { font-size: 1.1em;}
      h2 {font-size:0.98em;}
      .emoji { font-size: 1.3rem;}
    }
  </style>
</head>
<body>

<h1>😂 Funny Volume Control Game 🎮</h1>
<p>
  Welcome to the <b>craziest volume controller</b> ever built!  
  Adjust your sound with our <span style="color:#fffd66;">quirky controls</span> below.<br>
  <b>Can you outsmart the pump, eclipse the sun, or unlock pi mode?</b>
</p>
<button id="startMusic">▶️ Start Game Music</button>
<!-- Mobile-friendly: Not doing external music control for privacy -->

<!-- 😀 Emoji Mood Volume -->
<div class="control">
  <h2>😀 Emoji Mood Volume</h2>
  <input type="range" min="0" max="100" value="50" class="slider" id="emojiSlider" aria-label="Emoji Mood Slider">
  <div id="emojiFace" class="emoji">😐</div>
</div>

<!-- ☕ Fill the Chai Cup -->
<div class="control">
  <h2>☕ Fill the Chai Cup</h2>
  <canvas id="chaiCanvas" width="160" height="120"></canvas>
</div>

<!-- 🐱 Cat Meow Meter -->
<div class="control">
  <h2>🐱 Cat Meow Meter</h2>
  <input type="range" min="0" max="100" value="50" id="catSlider" class="slider" aria-label="Cat Meow Slider">
  <div id="catEmoji" class="emoji">😺</div>
</div>

<!-- 💿 DJ Vinyl Knob -->
<div class="control">
  <h2>💿 DJ Spin Control</h2>
  <canvas id="djKnob" width="120" height="120"></canvas>
</div>

<!-- 🤫 Shhh → PARTY -->
<div class="control">
  <h2>🤫 Shhh → 🎉 PARTY</h2>
  <input type="range" min="0" max="100" value="50" id="partySlider" class="slider" aria-label="Party Slider">
  <div id="partyText">Medium 🎶</div>
</div>

<!-- 🏀 Ball Shooter -->
<div class="control">
  <h2>🏀 Ball Shooter</h2>
  <canvas id="ballCanvas" width="210" height="110"></canvas>
</div>

<!-- ✏️ Write the Volume -->
<div class="control">
  <h2>✏️ Write the Volume</h2>
  <input type="number" id="pencilInput" min="0" max="100" placeholder="Write a number...">
</div>

<!-- 🌞 Eclipse Volume -->
<div class="control">
  <h2>🌞 Eclipse Volume</h2>
  <canvas id="eclipseCanvas" width="150" height="150"></canvas>
</div>

<!-- ⚖️ Seesaw Balance -->
<div class="control">
  <h2>⚖️ Seesaw Balance</h2>
  <canvas id="seesawCanvas" width="210" height="50"></canvas>
</div>

<!-- 🚲 Pump the Volume -->
<div class="control">
  <h2>🚲 Pump the Volume</h2>
  <button id="pumpBtn" aria-label="Pump!">Pump!</button>
  <div style="width:90%; max-width:200px; height:22px; background: #181c16; border-radius:10px; overflow:hidden; margin:auto; border:2px solid #14c853;">
    <div id="pumpBar" style="width:50%; height:100%; background:linear-gradient(90deg, #00c853,#92ff96); border-radius:10px;"></div>
  </div>
</div>

<!-- 🥧 Enter π Digits -->
<div class="control">
  <h2>🥧 Enter π Digits</h2>
  <div style="font-size:1em;color:#eecb74;" id="piStatus">Current Volume: <span id="piVolume">7</span>%</div>
  <input type="text" id="piInput" placeholder="Enter digits of Pi">
  <div id="piMsg"></div>
</div>

<script>
/* ---- AUDIO ---- */
let audioCtx, masterGain;
function startMusic() {
  if (audioCtx) return;
  audioCtx = new (window.AudioContext || window.webkitAudioContext)();
  masterGain = audioCtx.createGain();
  masterGain.gain.value = 0.5;
  masterGain.connect(audioCtx.destination);

  function playNote(freq, time, duration) {
    let osc = audioCtx.createOscillator();
    osc.type = "triangle";
    osc.frequency.value = freq;
    let g = audioCtx.createGain();
    g.gain.setValueAtTime(0.12, time);
    g.gain.exponentialRampToValueAtTime(0.001, time + duration);
    osc.connect(g).connect(masterGain);
    osc.start(time); osc.stop(time + duration);
  }
  const notes = [261, 329, 392, 329, 440, 349, 392];
  let t = audioCtx.currentTime;
  setInterval(() => {
    notes.forEach((n, i) => playNote(n, t + i * 0.3, 0.23));
    t += 2;
  }, 2100);
}
document.getElementById("startMusic").onclick = startMusic;
function setVolume(val) {
  if (masterGain) masterGain.gain.value = val/100;
  document.getElementById("piVolume").textContent = Math.round(val);
}
setVolume(7);

/* Emoji Slider */
emojiSlider.oninput = function(e) {
  const v = +e.target.value;
  setVolume(v);
  const faces = ["😶","🙂","😀","😁","🤩"];
  emojiFace.textContent = faces[Math.min(4, Math.floor(v/22))];
};

/* Fill the Chai Cup */
const chai = chaiCanvas.getContext("2d");
function drawChai(level=50){
  chai.clearRect(0,0,160,120);
  chai.fillStyle="#ffecc7";
  chai.fillRect(39,20,82,89); // cup bg
  chai.strokeStyle="#cf930f";
  chai.lineWidth=4; chai.strokeRect(39,20,82,89);// cup outline
  chai.beginPath();
  chai.arc(80,35,40,Math.PI,0); chai.fillStyle="#f6bc81"; chai.fill();
  // tea
  let teaLevel = 109-(level*0.85);
  chai.fillStyle="#ba7f3a"; 
  chai.fillRect(43,teaLevel,74, 109-teaLevel);
  chai.beginPath(); chai.arc(80,teaLevel,37,Math.PI,0); chai.fill();
}
let chaiLvl = 50; drawChai(chaiLvl);
chaiCanvas.onclick = ()=>{
  chaiLvl = Math.floor(Math.random()*100);
  drawChai(chaiLvl);
  setVolume(chaiLvl);
};

/* Cat Meow Meter */
catSlider.oninput = function(e){
  const v=+e.target.value;
  setVolume(v);
  const faces=["🙀","😿","😺","😻"];
  catEmoji.textContent=faces[Math.floor(v/34)];
};

/* DJ Knob */
const dj = djKnob.getContext("2d");
let angle = Math.PI/2;
function drawKnob() {
  dj.clearRect(0,0,120,120);
  // vinyl
  dj.beginPath(); dj.arc(60,60,55,0,2*Math.PI);
  dj.fillStyle="#444"; dj.fill(); dj.lineWidth=5; dj.strokeStyle="#222"; dj.stroke();
  // label
  dj.beginPath(); dj.arc(60,60,13,0,2*Math.PI);
  dj.fillStyle="#ffd057"; dj.fill();
  // needle
  dj.save();
  dj.translate(60,60);
  dj.rotate(angle);
  dj.beginPath(); dj.moveTo(0,0); dj.lineTo(40,0);
  dj.lineWidth=6; dj.strokeStyle="#ffd057"; dj.stroke();
  dj.restore();
}
drawKnob();
djKnob.onclick = ()=>{
  angle += 0.7;
  drawKnob();
  let v = ((angle % (2*Math.PI)) / (2*Math.PI))*100;
  setVolume(v);
};

/* Party Mode */
partySlider.oninput = function(e){
  const v=e.target.value;
  setVolume(v);
  partyText.textContent=v<20 ? "🤫 Quiet" : v<60 ? "Medium 🎶":"🎉 PARTY!";
  partyText.style.color= v>60? "#fdff74":"#ffd8cf";
};

/* Ball Shooter */
const ball=ballCanvas.getContext("2d");
function shootBall() {
  ball.clearRect(0,0,210,110);
  let x=20, y=90, vx=5, vy=-7;
  let interval=setInterval(()=>{
    ball.clearRect(0,0,210,110);
    // Bar
    ball.fillStyle="#ffc300";
    ball.fillRect(26,100,158,8);
    // Ball
    ball.beginPath(); ball.arc(x,y,10,0,2*Math.PI);
    ball.fillStyle="red"; ball.fill(); ball.lineWidth=2; ball.strokeStyle='#2c2c2c'; ball.stroke();
    x+=vx; y+=vy; vy+=0.58;
    // Hit
    if(y>=98){ clearInterval(interval); 
      let level = Math.max(0, Math.min(158, x-26));
      setVolume(level/158*100); }
  },20);
}
ballCanvas.onclick = shootBall;

/* Pencil Writing */
pencilInput.oninput=function(e){
  let v=+e.target.value;
  if(v>=0 && v<=100){setVolume(v);}
};

/* Solar Eclipse */
const ectx=eclipseCanvas.getContext("2d");
let moonX=45;
function drawEclipse(){
  ectx.clearRect(0,0,150,150);
  // Sun
  ectx.beginPath(); ectx.arc(75,75,54,0,2*Math.PI);
  let sunGrad = ectx.createRadialGradient(75,75,36, 75,75,54); 
  sunGrad.addColorStop(0,'#ffe700'); sunGrad.addColorStop(1,'#fd9543');
  ectx.fillStyle=sunGrad; ectx.fill();
  // Moon
  ectx.beginPath(); ectx.arc(moonX,75,53,0,2*Math.PI);
  ectx.fillStyle="#15140e"; ectx.globalAlpha=0.91; ectx.fill(); ectx.globalAlpha=1;
}
drawEclipse();
eclipseCanvas.onclick=()=>{
  moonX = moonX<80? 108 : 45;
  drawEclipse();
  setVolume(moonX>80? 72 : 23);
};

/* Seesaw Balance */
const sc=seesawCanvas.getContext("2d");
let pos=Math.random()*180+15;
function drawSeesaw(){
  sc.clearRect(0,0,210,50);
  sc.save();
  // Bar
  sc.translate(5,40);
  let ang = (pos-105)/170 * 0.5;
  sc.rotate(ang);
  sc.fillStyle="#b7b5ad";sc.fillRect(0,-5,200,10);
  // Ball
  sc.beginPath(); sc.arc(pos,0,9,0,2*Math.PI);
  sc.fillStyle="#64ebfa"; sc.fill(); sc.lineWidth=2; sc.strokeStyle = "#222";sc.stroke();
  sc.restore();
}
drawSeesaw();
seesawCanvas.onclick=()=>{
  pos=Math.random()*180+15; drawSeesaw();
  setVolume(pos/210*100);
};

/* Pump Volume */
let pumpVal = 50;
pumpBtn.onclick=()=>{
  pumpVal = Math.min(100,pumpVal+Math.floor(Math.random()*14+6));
  pumpBar.style.width = pumpVal+"%";
  setVolume(pumpVal);
};

/* Pi Entry */
let piVol = 7;
piInput.oninput=e=>{
  let txt=e.target.value;
  if(/^(3(\.1?(4)?)?)$/.test(txt)){
    setVolume(31);
    piMsg.textContent="✔️ Correct vibe!"; piMsg.style.color="#14d853";
  } else if(txt && !/^3(\.1?(4)?)?$/.test(txt)) {
    piMsg.textContent="❌ Not π... try again!"; piMsg.style.color="#ff1e3c";
  } else {
    piMsg.textContent="";
  }
};
</script>
</body>
</html>
